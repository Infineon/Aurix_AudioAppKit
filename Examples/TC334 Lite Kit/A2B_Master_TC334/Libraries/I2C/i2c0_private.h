/*******************************************************************************
 * \file i2c0_private.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such terms
 * of use are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

#ifndef I2C_PRIVATE_H
#define I2C_PRIVATE_H

/****** I2C Bus Speed ******************************/
/* choose either 100KHz or 400KHz bus speed */
#define I2C_SPEED_100KHZ FALSE
#define I2C_SPEED_400KHZ TRUE

/****** I2C PORT Selection ******************************/
/* [0] SCL:P20.11 SDA:P20.12 */
/* [1] SCL:P20.8  SDA:P20.9  */
/* [2] SCL:P20.13 SDA:P20.14 */
/* [3] SCL:P15.4  SDA:P15.5  */
/* [4] SCL:P13.1  SDA:P13.2  */
#define I2C_PORT 4

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
/* software delay times*/
#define SOFTWARE_RELOAD_100KHZ ((uint16) 250) /125
#define SOFTWARE_RELOAD_400KHZ ((uint16) 105) //25
/* hardware delay times*/
#define T5_RELOAD_100KHZ ((uint16) 105)
#define T5_RELOAD_400KHZ ((uint16) 12)


#if (I2C_SPEED_100KHZ==TRUE)
#define I2C_BIT_DELAY ((uint32)SOFTWARE_RELOAD_100KHZ)
#elif(I2C_SPEED_400KHZ==TRUE)
#define I2C_BIT_DELAY ((uint32)SOFTWARE_RELOAD_400KHZ)
#else
#define "error unknow I2C bus speed"
#endif


/*##### I2C PORT CONFIGURATION SETTINGS ################*/

/*** Port pin specific settings for I2C ***/
#if (I2C_PORT == 0)
/*DS1631 Temperature sensor*/
#define PORT_IN P20_IN.U
#define PORT_SET P20_OMR.U

#define PORT_IOCR_SCL P20_IOCR8.B.PC11
#define PORT_IOCR_SDA P20_IOCR12.B.PC12

/* what bits are the SCL and SDA on the port */
#define SCL_BIT (11)
#define SDA_BIT (12)
#elif (I2C_PORT == 1)
/*24T128 EEPROM*/
#define PORT_IN P20_IN.U
#define PORT_SET P20_OMR.U
/* what port are the SCL and SDA pins on */
#define PORT_IOCR_SCL P20_IOCR8.B.PC8
#define PORT_IOCR_SDA P20_IOCR8.B.PC9

/* what bits are the SCL and SDA on the port */
#define SCL_BIT (8u)
#define SDA_BIT (9u)

#elif (I2C_PORT == 2)
/*MCP7940M RTC*/
/*what bits are the SCL and SDA on the port */
#define PORT_IN P20_IN.U
#define PORT_SET P20_OMR.U
#define PORT_IOCR_SCL P20_IOCR12.B.PC13
#define PORT_IOCR_SDA P20_IOCR12.B.PC14

#define SCL_BIT (13u)
#define SDA_BIT (14u)

#elif (I2C_PORT == 3)
/*The I2C via P15.4 and P15.5 of the TC3X9 is connected to a serial EEPROM with
 * a size of 2KBit (2 x 128 x 8). The slave address of this EEPROM is 0x50. The
 * upper half of the array (80h-FFh) is permanently write-protected. Write
 * operations to this address range are inhibited. Read operations are not
 * affected. This upper half contains a preprogrammed EUI-48™ node address
 * which can be used as MAC ID for Ethernet. The other 128 bytes are writable
 * by customer.*/

/* what port are the SCL and SDA pins on */
#define PORT_IN P15_IN.U
#define PORT_SET P15_OMR.U

/* what bits are the SCL and SDA on the port */
#define PORT_IOCR_SCL P15_IOCR4.B.PC4
#define PORT_IOCR_SDA P15_IOCR4.B.PC5

#define SCL_BIT (4u)
#define SDA_BIT (5u)

#elif (I2C_PORT == 4)
/*what bits are the SCL and SDA on the port */
#define PORT_IN P13_IN.U
#define PORT_SET P13_OMR.U

/* what bits are the SCL and SDA on the port */
#define PORT_IOCR_SCL P13_IOCR0.B.PC1
#define PORT_IOCR_SDA P13_IOCR0.B.PC2

#define SCL_BIT (1u)
#define SDA_BIT (2u)

#endif

/*##################################################*/

/* define mask settings for the I2C bits */
#define SCL ((uint32)1<<SCL_BIT)
#define SDA ((uint32)1<<SDA_BIT)
#define READ_MASK ((SCL)|(SDA))

#endif  /* end of file */

/*************************************************************************
 Development history of the file



*************************************************************************/
