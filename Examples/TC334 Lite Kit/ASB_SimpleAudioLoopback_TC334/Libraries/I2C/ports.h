/*******************************************************************************
 * \file ports.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such terms
 * of use are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
#ifndef PORTS_H
#define PORTS_H 1

#define PC0(x) (x << 3)
#define PC1(x) (x << 11)
#define PC2(x) (x << 19)
#define PC3(x) (x << 27)
#define PC4(x) (x << 3)
#define PC5(x) (x << 11)
#define PC6(x) (x << 19)
#define PC7(x) (x << 27)
#define PC8(x) (x << 3)
#define PC9(x) (x << 11)
#define PC10(x) (x << 19)
#define PC11(x) (x << 27)
#define PC12(x) (x << 3)
#define PC13(x) (x << 11)
#define PC14(x) (x << 19)
#define PC15(x) (x << 27)

#define PORT_ALL_PUSHPULL_GPO  (0x80808080u)

#define PORT_TGL_P0  (0x00010001u)
#define PORT_TGL_P1  (0x00020002u)
#define PORT_TGL_P2  (0x00040004u)
#define PORT_TGL_P3  (0x00080008u)
#define PORT_TGL_P4  (0x00100010u)
#define PORT_TGL_P5  (0x00200020u)
#define PORT_TGL_P6  (0x00400040u)
#define PORT_TGL_P7  (0x00800080u)
#define PORT_TGL_P8  (0x01000100u)
#define PORT_TGL_P9  (0x02000200u)
#define PORT_TGL_P10 (0x04000400u)
#define PORT_TGL_P11 (0x08000800u)
#define PORT_TGL_P12 (0x10001000u)
#define PORT_TGL_P13 (0x20002000u)
#define PORT_TGL_P14 (0x40004000u)
#define PORT_TGL_P15 (0x80008000u)

#define PORT_SET_P0  (0x00000001u)
#define PORT_SET_P1  (0x00000002u)
#define PORT_SET_P2  (0x00000004u)
#define PORT_SET_P3  (0x00000008u)
#define PORT_SET_P4  (0x00000010u)
#define PORT_SET_P5  (0x00000020u)
#define PORT_SET_P6  (0x00000040u)
#define PORT_SET_P7  (0x00000080u)
#define PORT_SET_P8  (0x00000100u)
#define PORT_SET_P9  (0x00000200u)
#define PORT_SET_P10 (0x00000400u)
#define PORT_SET_P11 (0x00000800u)
#define PORT_SET_P12 (0x00001000u)
#define PORT_SET_P13 (0x00002000u)
#define PORT_SET_P14 (0x00004000u)
#define PORT_SET_P15 (0x00008000u)

#define PORT_CLR_P0  (0x00010000u)
#define PORT_CLR_P1  (0x00020000u)
#define PORT_CLR_P2  (0x00040000u)
#define PORT_CLR_P3  (0x00080000u)
#define PORT_CLR_P4  (0x00100000u)
#define PORT_CLR_P5  (0x00200000u)
#define PORT_CLR_P6  (0x00400000u)
#define PORT_CLR_P7  (0x00800000u)
#define PORT_CLR_P8  (0x01000000u)
#define PORT_CLR_P9  (0x02000000u)
#define PORT_CLR_P10 (0x04000000u)
#define PORT_CLR_P11 (0x08000000u)
#define PORT_CLR_P12 (0x10000000u)
#define PORT_CLR_P13 (0x20000000u)
#define PORT_CLR_P14 (0x40000000u)
#define PORT_CLR_P15 (0x80000000u)

typedef enum
{
  PCx_Input_Tristate,  /**< \brief No input pull device connected, tri-state mode  */
  PCx_Input_PullDown,  /**< \brief Input pull-down device connected  */
  PCx_Input_PullUp,    /**< \brief Input pull-up device connected  */
} PcInputCoding_enum;

typedef enum
{
  Px_SetOutputLow,  /**< \brief No input pull device connected, tri-state mode  */
    Px_SetOutputHigh,  /**< \brief Input pull-down device connected  */
} PcPinOutputState_enum;

typedef enum
{
  PCx_Output_PushPull_gpio = 0x10,   /**< \brief  */
  PCx_Output_PushPull_Alt_1,   /**< \brief  */
  PCx_Output_PushPull_Alt_2,   /**< \brief  */
  PCx_Output_PushPull_Alt_3,   /**< \brief  */
  PCx_Output_PushPull_Alt_4,   /**< \brief  */
  PCx_Output_PushPull_Alt_5,   /**< \brief  */
  PCx_Output_PushPull_Alt_6,   /**< \brief  */
  PCx_Output_PushPull_Alt_7,   /**< \brief  */
  PCx_Output_OpenDrain_gpio,   /**< \brief  */
  PCx_Output_OpenDrain_Alt_1,   /**< \brief  */
  PCx_Output_OpenDrain_Alt_2,   /**< \brief  */
  PCx_Output_OpenDrain_Alt_3,   /**< \brief  */
  PCx_Output_OpenDrain_Alt_4,   /**< \brief  */
  PCx_Output_OpenDrain_Alt_5,   /**< \brief  */
  PCx_Output_OpenDrain_Alt_6,   /**< \brief  */
  PCx_Output_OpenDrain_Alt_7,   /**< \brief  */
} PcOutputCoding_enum;

typedef enum
{
  PDx_Speed_Grade_1,  /**< \brief   */
  PDx_Speed_Grade_2,  /**< \brief   */
  PDx_Speed_Grade_3,  /**< \brief   */
  PDx_Speed_Grade_4,  /**< \brief   */
} PDx_Speed_Grade_enum;

typedef enum
{
  PDISC_Digital,  /**< \brief   */
  PDISC_Analog,  /**< \brief   */
} PDISC_Analog_enum;

#endif
